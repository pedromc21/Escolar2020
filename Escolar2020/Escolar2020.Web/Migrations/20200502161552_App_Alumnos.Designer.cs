// <auto-generated />
using System;
using Escolar2020.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Escolar2020.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200502161552_App_Alumnos")]
    partial class App_Alumnos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Escolar2020.Web.Data.App_Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido_Materno")
                        .HasMaxLength(250);

                    b.Property<string>("Apellido_Paterno")
                        .HasMaxLength(250);

                    b.Property<string>("CURP")
                        .HasMaxLength(100);

                    b.Property<string>("Ciclo_Escolar")
                        .HasMaxLength(150);

                    b.Property<string>("Clave_Familia")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EMail")
                        .HasMaxLength(150);

                    b.Property<DateTime>("Fecha_Nacimiento");

                    b.Property<string>("Grado")
                        .HasMaxLength(100);

                    b.Property<string>("Grupo")
                        .HasMaxLength(100);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NIA")
                        .HasMaxLength(100);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("OrdenSeccion");

                    b.Property<string>("PWd_App")
                        .HasMaxLength(50);

                    b.Property<int>("Periodo_Id");

                    b.Property<int>("Persona_Id");

                    b.Property<string>("Seccion")
                        .HasMaxLength(100);

                    b.Property<string>("Sexo")
                        .HasMaxLength(10);

                    b.Property<string>("Status")
                        .HasMaxLength(100);

                    b.Property<string>("UserId");

                    b.Property<string>("Usuario_App")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("App_Alumnos");
                });

            modelBuilder.Entity("Escolar2020.Web.Data.App_Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido_Materno")
                        .HasMaxLength(250);

                    b.Property<string>("Apellido_Paterno")
                        .HasMaxLength(250);

                    b.Property<string>("Celular")
                        .HasMaxLength(150);

                    b.Property<string>("Clave")
                        .HasMaxLength(50);

                    b.Property<string>("Clave_Familia")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Clave_Institucional")
                        .HasMaxLength(50);

                    b.Property<string>("EMail")
                        .HasMaxLength(150);

                    b.Property<string>("Email_Institucional")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Fecha_Nacimiento");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250);

                    b.Property<string>("Nombre_Empresa")
                        .HasMaxLength(250);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Persona_Id");

                    b.Property<string>("Profesion")
                        .HasMaxLength(250);

                    b.Property<int>("Puesto_Empresa")
                        .HasMaxLength(250);

                    b.Property<string>("Sexo")
                        .HasMaxLength(10);

                    b.Property<string>("Telefono")
                        .HasMaxLength(150);

                    b.Property<string>("Telefono_Trabajo")
                        .HasMaxLength(150);

                    b.Property<string>("UserId");

                    b.Property<string>("Usuario")
                        .HasMaxLength(50);

                    b.Property<string>("Usuario_Institucional")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("App_Tutors");
                });

            modelBuilder.Entity("Escolar2020.Web.Data.Entity.App_User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Clave_Familia");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<int>("Persona_Id");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Table");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Escolar2020.Web.Data.App_Alumno", b =>
                {
                    b.HasOne("Escolar2020.Web.Data.Entity.App_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Escolar2020.Web.Data.App_Tutor", b =>
                {
                    b.HasOne("Escolar2020.Web.Data.Entity.App_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Escolar2020.Web.Data.Entity.App_User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Escolar2020.Web.Data.Entity.App_User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Escolar2020.Web.Data.Entity.App_User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Escolar2020.Web.Data.Entity.App_User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
